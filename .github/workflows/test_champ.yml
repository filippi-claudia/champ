name: Build and test

on: [push]

jobs:
  build:

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1

    - run: conda --version

    - name: Install_compilers_and_libraries
      run: |
           sudo apt install gfortran openmpi-bin gawk libblacs-mpi-dev liblapack-dev # valgrind libmkl-full-dev
           gawk --version
           mpirun --version
           conda install -c conda-forge numpy
           conda install -c conda-forge scipy

    - name: Building_code_for_h2
      run: |

           # save the module file
           cp src/vmc/m_vmc.f90 ./m_vmc_save
           cp src/vmc/m_sr.f90 ./m_sr_save
           cp src/vmc/m_optci.f90 ./m_optci_save

           # copy module file
           cp tests/CI_test/h2/module/*.f90 src/vmc

           # compile
           cmake -H. -Bbuild -DCMAKE_Fortran_COMPILER=mpifort -DENABLE_TEST=ON
           cmake --build build -- -j2

    - name: Run_h2
      run: |

           cd tests/CI_test/h2/qmc_1det/
           export OMPI_MCA_btl=^openib # Avoids MCA warnings

           # run and compare simple sampling
           echo "- Running vmc.inp in serial:"
           $HOME/work/champ/champ/bin/vmc.mov1 < vmc.inp > vmc.out 
           echo "  total E vs reference:" 
           $HOME/work/champ/champ/tools/compare_value.py vmc.out "total E" -1.0083658 
           echo ""

           # run and compare simple sampling MPI
           echo "- Running vmc.inp in parallel:"
           mpirun --stdin all -n 2 $HOME/work/champ/champ/bin/vmc.mov1 < vmc.inp > vmc.out 
           echo "  total E vs reference:" 
           $HOME/work/champ/champ/tools/compare_value.py vmc.out "total E" -1.0119453            
           echo ""

           # run and compare davidson optimization
           echo "- Running vmc_lin.inp in serial:"
           $HOME/work/champ/champ/bin/vmc.mov1 < vmc_lin.inp > vmc_lin.out 
           echo "  total E vs reference:" 
           # $HOME/work/champ/champ/tools/compare_value.py vmc_lin.out "total E" -1.0604737
           echo ""

           # run and compare davidson optimization MPI
           echo "- Running vmc_lin.inp in parallel:"
           mpirun --stdin all -n 2 $HOME/work/champ/champ/bin/vmc.mov1 < vmc_lin.inp > vmc_lin.out 
           echo "  total E vs reference:" 
           # $HOME/work/champ/champ/tools/compare_value.py vmc_lin.out "total E" -1.0586750 
           echo ""  
           
           cd $HOME/work/champ/champ

    - name: Run Davidson_test
      env:
        CONDA_PREFIX: /usr/share/miniconda
      run: |
        
           cd tests/CI_test/h2/qmc_1det/
           
           # run and compare eigenvalues given by Davidson
           echo "- Running vmc_davidson_check.inp in serial:"
           echo "- Warning Remember to regenerate H.dat and S.dat if the code changes"
           echo "- Warning this can be done by setting bool_export_matrices to .true."
           echo "- Warning in davidson.f90."
           $HOME/work/champ/champ/bin/vmc.mov1 < vmc_davidson_check.inp > vmc_davidson_check.out 
           echo "  CHAMP Eigenalues vs Scipy:" 
           python compare_eigenvalues.py
     
           # restore the module files
           cd $HOME/work/champ/champ
           cp m_vmc_save ./src/vmc/m_vmc.f90
           cp m_optci_save ./src/vmc/m_optci.f90
           cp m_sr_save ./src/vmc/m_sr.f90     
     
    - name: Building_code_for_psb3_butadiene_and_psb2
      run: |

           # save the module files
           cp src/vmc/m_vmc.f90 ./m_vmc_save
           cp src/vmc/m_sr.f90 ./m_sr_save
           cp src/vmc/m_optci.f90 ./m_optci_save

           # copy module files to src
           cp tests/CI_test/psb3/module/*.f90 src/vmc

           # compile
           rm -rf bin build
           cmake -H. -Bbuild -DCMAKE_Fortran_COMPILER=mpifort -DENABLE_TEST=ON
           cmake --build build --clean-first -- -j2

    - name: Run_psb3
      run: |

           cd tests/CI_test/psb3/
           export OMPI_MCA_btl=^openib # Avoids MCA warnings

           # run and compare a sr calculation
           echo "- Running sr_n.inp in serial:"
           $HOME/work/champ/champ/bin/vmc.mov1 < sr_n.inp > sr_n.out
           echo " total E vs reference:" 
           $HOME/work/champ/champ/tools/compare_value.py sr_n.out "total E" -42.7144606 
           echo ""

           # run and compare a sr calculation MPI
           echo "- Running sr_n.inp in parallel:"
           mpirun --stdin all -n 2 $HOME/work/champ/champ/bin/vmc.mov1 < sr_n.inp > sr_n.out
           echo " total E vs reference:" 
           $HOME/work/champ/champ/tools/compare_value.py sr_n.out "total E" -42.6476514 
           #$HOME/work/champ/champ/tools/compare_output_file.py sr_n.out output_ref/sr_n_2_threads.out
           echo ""
           
           # run and compare a regterg calculation
           echo "- Running regterg.inp in serial:"
           $HOME/work/champ/champ/bin/vmc.mov1 < regterg.inp > regterg.out 
           echo " total E vs reference:" 
           $HOME/work/champ/champ/tools/compare_value.py regterg.out "total E" -41.4910248 
           echo ""

           # run and compare a regterg calculation MPI
           echo "- Running regterg.inp in parallel:"
           mpirun --stdin all -n 2 $HOME/work/champ/champ/bin/vmc.mov1 < regterg.inp > regterg.out 
           echo " total E vs reference:" 
           $HOME/work/champ/champ/tools/compare_value.py regterg.out "total E" -41.3989435 
           #$HOME/work/champ/champ/tools/compare_output_file.py regterg.out output_ref/regterg_2_threads.out
           echo ""

           # run and compare a Davidson calculation
           echo "- Running free.inp in serial:"
           $HOME/work/champ/champ/bin/vmc.mov1 < free.inp > free.out 
           echo " first eigenvalue vs reference:" 
           $HOME/work/champ/champ/tools/compare_value.py free.out "eigenvalue            1" -45.898315302789705 
           echo ""

           # run and compare a Davidson calculation MPI
           echo "- Running free.inp in parallel:"
           mpirun --stdin all -n 2 $HOME/work/champ/champ/bin/vmc.mov1 < free.inp > free.out 
           echo " first eigenvalue vs reference:" 
           $HOME/work/champ/champ/tools/compare_value.py free.out "eigenvalue            1" -50.713234670513742 
           echo ""

    - name: Run_butadiene_sr
      run: |
           cd tests/CI_test/butadiene_sr/
           export OMPI_MCA_btl=^openib # Avoids MCA warnings

           # run and compare a geometry optimization calculation
           echo "- Running vmc_sr.inp in serial:"
           $HOME/work/champ/champ/bin/vmc.mov1 < vmc_sr.inp > vmc_sr.out
           echo " total E vs reference:" 
           $HOME/work/champ/champ/tools/compare_value.py vmc_sr.out "total E" -26.0340157 
           echo ""

           # run and compare a geometry optimization calculation MPI
           echo "- Running vmc_sr.inp in parallel:"
           mpirun --stdin all -n 2 $HOME/work/champ/champ/bin/vmc.mov1 < vmc_sr.inp > vmc_sr.out
           echo " total E vs reference:" 
           $HOME/work/champ/champ/tools/compare_value.py vmc_sr.out "total E" -26.0354987 
           echo ""

           # run and compare a optimize all (ci, jas, orb) calculation
           echo "- Running vmc_optall.inp in serial:"
           $HOME/work/champ/champ/bin/vmc.mov1 < vmc_optall.inp > vmc_optall.out  
           echo " total E vs reference:" 
           $HOME/work/champ/champ/tools/compare_value.py vmc_optall.out "total E" -22.4869109
           echo ""

           # run and compare a optimize all (ci, jas, orb) calculation MPI
           echo "- Running vmc_optall.inp in parallel:"
           mpirun --stdin all -n 2 $HOME/work/champ/champ/bin/vmc.mov1 < vmc_optall.inp > vmc_optall.out 
           echo " first eigenvalue vs reference:" 
           $HOME/work/champ/champ/tools/compare_value.py vmc_optall.out "total E" -21.6147339 
           echo ""
           
    - name: Run_psb2_mix_n
      run: |
           cd tests/CI_test/psb2
           export OMPI_MCA_btl=^openib # Avoids MCA warnings

           # run and compare a geometry optimization calculation
           echo "- Running vmc_mix_SA.inp in serial:"
           $HOME/work/champ/champ/bin/vmc.mov1 < vmc_mix_SA.inp > vmc_mix_SA.out 
           echo " total E vs reference:" 
           $HOME/work/champ/champ/tools/compare_value.py vmc_mix_SA.out "total E" -29.9728608 
           echo ""

           # run and compare a geometry optimization calculation MPI
           echo "- Running vmc_mix_SA.inp in parallel:"
           mpirun --stdin all -n 2 $HOME/work/champ/champ/bin/vmc.mov1 < vmc_mix_SA.inp > vmc_mix_SA.out 
           echo " total E vs reference:" 
           $HOME/work/champ/champ/tools/compare_value.py vmc_mix_SA.out "total E" -29.8454481 
           echo ""

           #  restore the module files
           
           cd $HOME/work/champ/champ
           cp m_vmc_save ./src/vmc/m_vmc.f90
           cp m_optci_save ./src/vmc/m_optci.f90
           cp m_sr_save ./src/vmc/m_sr.f90

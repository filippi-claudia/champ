## Know the architecture of the CPU and set compile flags accordingly
set(TARGET_ARCHITECTURE "generic")
if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
   file(READ "/proc/cpuinfo" _cpuinfo)
   string(REGEX REPLACE ".*\nflags[ \t]*:[ \t]+([^\n]+).*" "\\1" _cpu_flags "${_cpuinfo}")
endif(CMAKE_SYSTEM_NAME STREQUAL "Linux")

string( TOLOWER "${VECTORIZED}" VECTORIZED )
message(STATUS "Vectorization status  " ${VECTORIZED} )

if(VECTORIZED STREQUAL "yes")
	message(STATUS "Vectorization switched ON by user  " )
	list(APPEND Fortran_FLAGS "-xCORE-AVX512")
	set(TARGET_ARCHITECTURE "avx512")
	add_definitions(-DVECTORIZATION="avx512")
elseif(VECTORIZED STREQUAL "auto")
	message(STATUS "Vectorization is auto; built-in vectorization used but no code-selection (loop modification) done  " )
	list(APPEND Fortran_FLAGS "-xCORE-AVX512")
	set(TARGET_ARCHITECTURE "avx512")
elseif(VECTORIZED STREQUAL "no")
	message(STATUS "Vectorization switched off by user  " )
else()
	message(STATUS "Vectorization is default  " )
  list(APPEND Fortran_FLAGS "-march=native" "-mtune=native")
endif()
unset(VECTORIZED CACHE)

add_definitions(-DTARGET_ARCHITECTURE=\"${TARGET_ARCHITECTURE}\")

name: GitHub-hosted Intel OneAPI build

on:
  push:
    branches:
      - 'releases/**'
      - main
    tags:
      - v2.*.*
      - v3.*.*
  pull_request:
    branches:
      - 'releases/**'
      - main

jobs:
  build_champ:
    strategy:
      matrix:
        toolchain: ['intel']
    name: Build CHAMP with ${{ matrix.toolchain }} OneAPI GitHub-hosted runner
    runs-on: ubuntu-latest
    timeout-minutes: 180
    defaults:
      run:
        shell: bash --noprofile --norc {0}
    steps:
      - name: Download Intel oneAPI
        run: |
          wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"
          sudo apt-get update

      - name: Cache Intel oneAPI components
        uses: actions/cache@v2
        with:
          path: /opt/intel
          key: ${{ runner.os }}-oneapi
          restore-keys: |
            ${{ runner.os }}-oneapi

      - name: install Intel oneapi components
        run: |
          sudo apt-get install -y intel-oneapi-common-vars
          sudo apt-get install -y intel-oneapi-compiler-fortran-2022.1.0
          sudo apt-get install -y intel-oneapi-compiler-dpcpp-cpp-2022.1.0
          sudo apt-get install -y intel-oneapi-mkl
          sudo apt-get install -y intel-oneapi-mkl-devel
          sudo apt-get install -y intel-oneapi-mpi-2021.6.0
          sudo apt-get install -y intel-oneapi-mpi-devel-2021.6.0

      - name: Get the CHAMP code
        uses: actions/checkout@v3

      - name: Compile the CHAMP code using Intel and run all tests
        run: |
          source /opt/intel/oneapi/setvars.sh

          cmake --version
          ifx --version
          icx --version
          mpiifx --version
          mpiicx --version

          cmake -H. -Bbuild \
            -DCMAKE_Fortran_COMPILER=mpiifx \
            -DCMAKE_C_COMPILER=mpiicx \
            -DBLA_STATIC=ON \
            -DBLA_VENDOR=Intel10_64lp_seq \
            -DENABLE_TREXIO=OFF \
            -DENABLE_QMCKL=OFF \

          cmake --build build -- -j2
          cd build
          ctest --output-on-failure --verbose -LE "(TREXIO|QMCKL)"
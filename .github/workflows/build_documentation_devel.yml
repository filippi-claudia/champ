# Simple workflow for generating and deploying static content with Doxygen to GitHub Pages
name: Deploy Doxygen-generated content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job for generating and deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Install Doxygen and required packages
      - name: Install Doxygen and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz # For call graphs
          sudo apt-get install -y texlive-latex-base texlive-pictures texlive-latex-extra # TikZ package for call graphs

      # Step 3: Generate documentation using Doxygen
      - name: Generate Doxygen documentation
        run: |
          cd docs
          doxygen Doxyfile

      # Step 4: Setup Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Step 5: Upload the generated documentation (public folder)
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Path to the folder with the generated HTML files
          path: 'docs/developers/html'

      # Step 6: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
